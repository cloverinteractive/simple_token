{"name":"Simple token","tagline":"Create unique tokens on active_record models","body":"# SimpleToken\r\n\r\n[![Build Status](https://secure.travis-ci.org/cloverinteractive/simple_token.png?branch=master)](http://travis-ci.org/cloverinteractive/simple_token)\r\n\r\nAdd an unique 64 chars sha2 or secure random token to your active record models.\r\n\r\n**Note:** You should definately try `postgresql` native `UUID` support, if that's not a possibility then `simple_token` has your back.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'simple_token'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install simple_token\r\n\r\n## Usage\r\n\r\nSimpleToken only has two dependencies, `activerecord` and `activesupport` and it's usage is the same as every `acts_as_` rails plugin out there.\r\n\r\nBy default SimpleToken expects you to have a `token` field in your table, but I'll show you how to customize this in a bit.\r\n\r\n### Default settings\r\n\r\nJust a simple call inside your model like this:\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  has_simple_token\r\nend\r\n```\r\n\r\n### Custom settings\r\n\r\nBy default SimpleToken, uses sha2 as it's digest algorithm and expects a token field to exist in your table but we can change this:\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_simple_token :token_field => :secret_hash, :digest_type => :secure_random\r\nend\r\n```\r\n\r\nThis model will now use `secure_random` to generate the secret token and it will write it to the `secret_hash` field on the users table.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}